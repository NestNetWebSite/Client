    load_module /usr/lib/nginx/modules/ngx_http_brotli_filter_module.so;
    load_module /usr/lib/nginx/modules/ngx_http_brotli_static_module.so;

    user nginx;
    worker_processes auto;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        client_max_body_size 10M;

        upstream backend {
            server backend_container:8080;      # docker-compose.yml에서 올라가는 컨테이너명으로 작성.
            keepalive 1024;
        }

        server {
            listen 80;              # nginx를 통해 외부로 노출되는 port

            location / {
                # root를 /usr/share/nginx/html 을 바라보게 했으므로(Dockerfile 참고)
                # 해당 경로 아래에 배포해주면 됨
                root   /usr/share/nginx/html;
                index  index.html;
                try_files $uri /index.html;
            }

            location /api {
            rewrite ^/api(.*)$ $1?$args break;
            proxy_pass         http://backend;
            }

            # gzip 압축 파일 제공 (fallback)
            gzip on;
            gzip_vary on;
            gzip_min_length 20;
            gzip_types text/plain application/json application/javascript application/x-javascript text/javascript text/css;
            gzip_proxied expired no-cache no-store private auth;
            gzip_disable "MSIE [1-6]\.";

            # brotli 압축 파일 제공 (default)
            brotli on;
            brotli_comp_level 6;
            brotli_static on;
            brotli_types application/atom+xml application/javascript application/json application/rss+xml
                application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype
                application/x-font-ttf application/x-javascript application/xhtml+xml application/xml
                font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon
                image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml;


        }
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        keepalive_timeout  65;

    }